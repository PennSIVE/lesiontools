% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/centralveins.R
\name{centralveins}
\alias{centralveins}
\title{Central Vein Detection}
\usage{
centralveins(epi, t1, flair, probmap = NULL, binmap = NULL, parallel = F,
  cores = 2, skullstrip = F, biascorrect = F, c3d = F)
}
\arguments{
\item{epi}{a T2*-EPI volume of class \code{nifti}.}

\item{t1}{a T1-weighted volume of class \code{nifti}.}

\item{flair}{a T2-FLAIR volume of class \code{nifti}.}

\item{probmap}{an image of class \code{nifti}, containing the probability that each voxel
is a lesion voxel.
If a probability map is not included, the MIMoSA model will be applied (Valcarcel et al., 2017).}

\item{binmap}{a \code{nifti} mask in which voxels are classified as either lesion voxels
or not lesion voxels.
Note that mask should be in the same space as the probmap volume.}

\item{parallel}{is a logical value that indicates whether the user's computer
is Linux or Unix (i.e. macOS), and should run the code in parallel.}

\item{cores}{if parallel = TRUE, cores is an integer value that indicates how many cores
the function should be run on.}

\item{skullstrip}{a logical value reflecting whether or not the images have already been skull-stripped.}

\item{biascorrect}{a logical value reflecting whether or not the images have already been bias-corrected.}

\item{c3d}{a logical value reflecting whether or not the Convert3D imaging toolbox is installed.}
}
\value{
A list containing candidate.lesions (a nifti file with labeled lesions evaluated for CVS),
cvs.probmap (a nifti file in which candidate lesions are labeled with their CVS probability), and
cvs.biomarker (a numeric value representing the average CVS probability of a subject's lesions).
}
\description{
This function obtains the probability that each lesion in a subject's deep white-matter has a central vein.
}
\examples{
\dontrun{
library(neurobase)
epi <- readnii('path/to/epi')
flair <- readnii('path/to/flair')
t1 <- readnii('path/to/t1')
cvs <- centralveins(epi = epi, t1 = t1, flair = flair
                         parallel = TRUE, cores = 4, c3d = T) }
}
